Fast Multiplication (FM)
--------分隔線--------
步驟0:宣告變數與標頭檔
為了使用字串輸入變數，需要加入
#include "string.h"
#define MAXCHAR 400
char a[MAXCHAR], b[MAXCHAR];
根據WIKI百科的步驟，假設a,b兩數相乘
我用x存a的每一格數字
我用y存b的每一格數字
x做完FFT的結果是X
y做完FFT的結果是Y
Z是X和Y對應項相乘的結果
z是Z做IFFT的結果
--------分隔線--------
步驟1:讓使用者輸入a,b兩數字(字串)
做Convoulution分別需要最小 2*Na-1
以及 2*Nb-1 的空間大小
為了方便起見，我將空間大小設為times
times是2的次方且比上面兩個數都還要大
因為z每一格數字不會超過81乘上較小的位數
令 Nmin=min(Na,Nb)
--------分隔線--------
步驟2:初始化陣列
把a的值填到x裡面
把b的值填到y裡面
--------分隔線--------
步驟3:找出prime跟omega
omega的條件是-
w^(times)=1，且w^(i)!=1 for i 介於 0到times
否則會出現更小的cyclic group
prime的條件是-
根據費馬小定理，如果w^(times)=1 (mod prime)
則prime一定形如(times*q+1)，q是正整數
以及p 大於81*Nmin，否則z會被mod掉而出錯
--------分隔線--------
步驟4:將omega填入陣列w
--------分隔線--------
步驟5:對x和y做FFT
FFT需要輸入的變數有
x X w times prime "inverse"
皆為Int 原本FFT的omega要改成w
--------分隔線--------
步驟6:X和Y對應項相乘放入Z
注意X和Y的位置
做完FFT位置會改變(根據你寫的FFT而定)
除了第一個位置不變
其他位置都反過來了
所以做對應項相乘的時候 位置要更動
--------分隔線--------
步驟7:對Z做IFFT得到z
做完後還需要做一些調整
除了第一個位置不變
其他位置都反過來了
z 要乘上 1/times 
以及mod prime的關係 有些數沒辦法整除...
--------分隔線--------
步驟8:輸出z的結果
但z還需要做一些調整

